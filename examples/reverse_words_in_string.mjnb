{"fileName":"reverse_words_in_string.mjnb","cells":[{"cellType":"MARKDOWN","id":"0eb30d7601a941968eaf637fc103894f","cellContent":"# Reverse Words in String Solution\nClick the link icon at the top right to view problem prompt"},{"cellType":"MARKDOWN","id":"707eef72efd24e1a89377b7d9511b529","cellContent":"### Solution 1 (With built-in functions)\nWe split words by space and reverse each word individually using Stringbuffer's reverse method. At the\nend we trim the last space character added at the end."},{"cellType":"CODE","id":"b44f27e4d9c448c2834319fd09900c06","cellContent":"String reverseWordsWithBuiltins(String s) {\n  String[] words = s.split(\" \");\n  StringBuilder result = new StringBuilder();\n  \n  for (String word : words) {\n   \tresult.append(new StringBuffer(word).reverse().toString()+\" \");\n  }\n  \n  return result.toString().trim();\n}"},{"cellType":"MARKDOWN","id":"3184f19a300c4656b6b0cd18675b4cf7","cellContent":"#### Analysis\n* Time complexity: O(n) where n is the length of the string\n* Space complexity: O(n) where n is the length of the string"},{"cellType":"MARKDOWN","id":"7c6abe87b29644a0a9a3c1f9079395f4","cellContent":"### Solution 2 (Without built-in functions)\nThis solution is the same as the one above, except we define our own reverse and split methods instead\nof using the respective built-in methods."},{"cellType":"CODE","id":"8e11a6e9634b48af929a81ed15acda5b","cellContent":"String revWord(String word) {\n  StringBuilder result = new StringBuilder();\n  \n  for (int i = 0; i < word.length(); i++) {\n    result.insert(0, word.charAt(i));\n  }\n  \n  return result.toString();\n}\n\nString[] split(String s) {\n  ArrayList<String> words = new ArrayList<>();\n  StringBuilder word = new StringBuilder();\n  \n  for (int i = 0; i < s.length(); i++) {\n    char c = s.charAt(i);\n    if (c == ' ') {\n      words.add(word.toString());\n      word = new StringBuilder();\n    } else {\n      word.append(c);\n    }\n  }\n  \n  words.add(word.toString());\n  return words.toArray(new String[words.size()]);\n}\n\nString reverseWordsWithoutBuiltins(String s) {\n  String[] words = split(s);\n  StringBuilder result = new StringBuilder();\n  \n  for (String word : words) {\n    result.append(revWord(word)+\" \");\n  }\n  \n  return result.toString().trim();\n}"},{"cellType":"MARKDOWN","id":"c9ca3040ee064f3889113d1951247c0e","cellContent":"#### Analysis\n* Time complexity: O(n) where n is the length of the string\n* Space complexity: O(n) where n is the length of the string"},{"cellType":"CODE","id":"f6635a3ec1e54c35a30d22e4730652ba","cellContent":"String reverseWords(String s) {\n  \/\/ return reverseWordsWithBuiltins(s);\n  return reverseWordsWithoutBuiltins(s);\n}"},{"cellType":"MARKDOWN","id":"45ce8a29c44f407ab94b4b171048dd87","cellContent":"##### Example input\n```\n\"foo bar abc\"\n```\n##### Example output\n```\n\"oof rab cba\"\n```"}],"problemSourceURL":"https:\/\/leetcode.com\/problems\/reverse-words-in-a-string-iii\/description\/","displayName":"Reverse Words in String","mainFunctionSignature":"reverseWords","timeCreated":1512158608186,"lastModified":1512158608186,"returnType":"String","tags":["strings","leetcode"]}